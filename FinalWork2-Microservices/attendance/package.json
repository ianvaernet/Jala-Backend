{
  "name": "attendance",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "build-image": "docker build -t user-app --no-cache .",
    "build-image:dev": "docker build -t user-app --no-cache -f Dockerfile.dev .",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx --report-unused-disable-directives",
    "local-start": "nodemon dist",
    "local-test": "NODE_ENV=test && jest",
    "local-test:coverage": "NODE_ENV=test && jest --coverage",
    "restart": "npm run stop && npm run start",
    "ssh": "CONTAINER_ID=$(docker ps --filter name=\"user-app\" --format \"{{.ID}}\") && docker exec -it $CONTAINER_ID sh",
    "start": "docker-compose -p user-app up -d",
    "stop": "docker-compose -p user-app stop",
    "test": "CONTAINER_ID=$(docker ps --filter name=\"user-app\" --format \"{{.ID}}\") && docker exec -it $CONTAINER_ID npm run local-test",
    "test:coverage": "CONTAINER_ID=$(docker ps --filter name=\"user-app\" --format \"{{.ID}}\") && docker exec -it $CONTAINER_ID npm run local-test:coverage"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/express": "^4.17.13",
    "@types/jest": "^28.1.3",
    "@types/node": "^18.0.0",
    "@types/node-fetch": "^2.6.2",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^8.3.4",
    "concurrently": "^7.2.2",
    "eslint": "^8.18.0",
    "jest": "^28.1.1",
    "nodemon": "^2.0.18",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "express": "^4.18.1",
    "inversify": "^6.0.1",
    "inversify-express-utils": "^6.4.3",
    "mongoose": "^6.4.1",
    "node-fetch": "^2.6.7",
    "reflect-metadata": "^0.1.13",
    "swagger-ui-express": "^4.4.0",
    "uuid": "^8.3.2"
  }
}
