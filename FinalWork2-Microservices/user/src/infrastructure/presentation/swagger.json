{
  "openapi": "3.0.0",
  "info": {
    "title": "JalaBackend - User API",
    "contact": {
      "email": "ian.vaernet@jala-foundation.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "description": "Local server",
      "url": "http://localhost:8000/api"
    }
  ],
  "tags": [
    {
      "name": "users"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "List users",
        "operationId": "listUsers",
        "parameters": [
          {
            "name": "nickname",
            "in": "query",
            "type": "string"
          },
          {
            "name": "fullName",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/APIResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/UserToList" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "The user to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserToCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/APIResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get a user by ID",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/APIResponse" },
                    {
                      "type": "object",
                      "properties": {
                        "data": { "$ref": "#/components/schemas/User" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete a user by ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "200"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "UserToCreate": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string"
          },
          "fullName": {
            "type": "string",
            "minLength": 5
          }
        }
      },
      "UserToList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nickname": {
            "type": "string",
            "minLength": 2
          },
          "fullName": {
            "type": "string",
            "minLength": 5
          },
          "totalAttendance": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nickname": {
            "type": "string",
            "minLength": 2
          },
          "fullName": {
            "type": "string",
            "minLength": 5
          },
          "totalAttendance": {
            "type": "integer",
            "minimum": 0
          },
          "attendances": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Attendance" }
          }
        }
      },
      "Attendance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "Unauthenticated": {
        "description": "Unauthenticated: you must provide a valid token.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "code": "401",
                "message": "No token provided"
              },
              "required": ["code", "message"]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized: you don't have the right permissions to access this resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "code": "403",
                "message": "You are not authorized to access this resource"
              },
              "required": ["code", "message"]
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request: there are errors in the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "code": "400",
                "message": "There are errors in your request"
              },
              "required": ["code", "message"]
            }
          }
        }
      },
      "NotFound": {
        "description": "The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "code": "404",
                "message": "The requested resource was not found"
              },
              "required": ["code", "message"]
            }
          }
        }
      },
      "InternalServerError": {
        "description": "There was an unexpected server error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "example": {
                "code": "500",
                "message": "There was an unexpected server error"
              },
              "required": ["code", "message"]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
